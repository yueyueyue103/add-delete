import React, { useEffect, useRef, useState } from 'react';
import './c2.css';

const imgURL1 =
  'https://syimg.3dmgame.com/uploadimg/upload/image/20230209/20230209173058_50497.jpg';
const imgURL2 =
  'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png';

function MyComponent() {
  const [selectedImage, setSelectedImage] = useState<string | undefined>(undefined);
  const [rotate1, setRotate1] = useState(0); // 第一张图片的旋转角度
  const [rotate2, setRotate2] = useState(0); // 第二张图片的旋转角度
  const [scale1, setScale1] = useState(1); // 第一张图片的缩放比例
  const [scale2, setScale2] = useState(1); // 第二张图片的缩放比例

  const canvasRef1 = useRef<HTMLCanvasElement>(null);
  const canvasRef2 = useRef<HTMLCanvasElement>(null);

  const handleRotateLeft = () => {
    if (selectedImage === imgURL1) {
      setRotate1((prevRotate1) => prevRotate1 - 90);
      setScale1(1);
    } else if (selectedImage === imgURL2) {
      setRotate2((prevRotate2) => prevRotate2 - 90);
      setScale2(1);
    }
  };

  const handleRotateRight = () => {
    if (selectedImage === imgURL1) {
      setRotate1((prevRotate1) => prevRotate1 + 90);
      setScale1(1);
    } else if (selectedImage === imgURL2) {
      setRotate2((prevRotate2) => prevRotate2 + 90);
      setScale2(1);
    }
  };

  useEffect(() => {
    const canvas1 = canvasRef1.current;
    const canvas2 = canvasRef2.current;
    const ctx1 = canvas1?.getContext('2d');
    const ctx2 = canvas2?.getContext('2d');

    const img1 = new Image();
    const img2 = new Image();

    img1.onload = () => {
      canvas1!.width = img1.width;
      canvas1!.height = img1.height;
      ctx1?.save();
      ctx1?.clearRect(0, 0, canvas1.width, canvas1.height);
      ctx1?.translate(canvas1.width / 2, canvas1.height / 2);
      ctx1?.rotate((rotate1 * Math.PI) / 180);
      ctx1?.scale(scale1, scale1);
      ctx1?.drawImage(img1, -canvas1.width / 2, -canvas1.height / 2);
      ctx1?.restore();
    };

    img2.onload = () => {
      canvas2!.width = img2.width;
      canvas2!.height = img2.height;
      ctx2?.save();
      ctx2?.clearRect(0, 0, canvas2.width, canvas2.height);
      ctx2?.translate(canvas2.width / 2, canvas2.height / 2);
      ctx2?.rotate((rotate2 * Math.PI) / 180);
      ctx2?.scale(scale2, scale2);
      ctx2?.drawImage(img2, -canvas2.width / 2, -canvas2.height / 2);
      ctx2?.restore();
    };

    img1.src = imgURL1;
    img2.src = imgURL2;
  }, [rotate1, rotate2, scale1, scale2]);

  return (
    <div>
      <div>
        <canvas
          ref={canvasRef1}
          onClick={() => setSelectedImage(imgURL1)}
          className={selectedImage === imgURL1 ? 'selected' : ''}
          style={{
            width: '500px',
            height: '300px',
            border: selectedImage === imgURL1 ? '5px solid red' : 'none',
            boxSizing: 'border-box',
          }}
        />
        <br />
        <canvas
          ref={canvasRef2}
          onClick={() => setSelectedImage(imgURL2)}
          className={selectedImage === imgURL2 ? 'selected' : ''}
          style={{
            width: '500px',
            height: '300px',
            border: selectedImage === imgURL2 ? '5px solid red' : 'none',
            boxSizing: 'border-box',
          }}
        />
      </div>

      <button onClick={handleRotateLeft}>左转</button>
      <button onClick={handleRotateRight}>右转</button>
    </div>
  );
}

export default MyComponent;

import React, { useState } from "react";
const LoginButton = ({ onLogin }) => { const handleClick = () => {
// 执行登录操作 console.log("进行登录的处理"); onLogin(); // 调用回调函数通知父组
件登录已完成
};
return (
<button onClick={handleClick}>登录
</button> );
};
const IssueButton = ({ onIssue }) => { const handleClick = () => {
// 执行发行操作 console.log("进行发行的处理"); onIssue(); // 调用回调函数通知父组件
发行已完成
};
return (
<button onClick={handleClick}>发行
</button> );
};
const ConfirmationDialog = ({ action, onConfirm }) => {
const [isOpen, setIsOpen] = useState(false);
const openDialog = (event) => { event.stopPropagation(); setIsOpen(true);
};

const closeDialog = () => { setIsOpen(false);
};
const handleConfirm = () => { onConfirm();
closeDialog();
};
let dialogMessage;
if (action === "login") {
dialogMessage = "确定登录吗?"; } else if (action === "issue") {
dialogMessage = "确定发行吗?"; }
return ( <>
{action === "login" ? ( <LoginButton
onLogin={openDialog} /> ):(
<IssueButton onIssue={openDialog} />
)}
{isOpen && (
<div className="dialog">
<p>{dialogMessage}</p>
<button onClick={handleConfirm}>是</button>
<button onClick={closeDialog}> 否</button>
</div> )}
</> );
};
const App = () => {
const handleLogin = () => {

// 登录处理完成后的操作 };
const handleIssue = () => { // 发行处理完成后的操作
};
return ( <div>
<h1>示例应用</h1>
<ConfirmationDialog action="login" onConfirm={handleLogin} />
<ConfirmationDialog action="issue" onConfirm={handleIssue} />
</div> );
};
export default App;